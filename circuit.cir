# A sample circuit description file using the defined grammar
# Run like: python main.py circuit.cir -i B=111000111 

# Macro Definitions (using only Nand as a primitive gate)
Not(x)      := Nand(x, x)
And(x,y)    := Not(Nand(x, y))
Or(x,y)     := Nand(Not(x), Not(y)) # De Morgan's Law version
Mux(a,b,c)  := Or(And(a, Not(c)), And(b, c))
Xor(x,y)    := Or(And(x, Not(y)), And(Not(x), y))
Xor3(x,y,z) := Xor(Xor(x, y), z)

# Intermediate signals
Ax = Xor3(D(B,0), D(D(B,0),0), D(D(D(B,0),0),0))
C3 = Not(Xor(D(D(C3,0),1), D(C3,0)))

# Final output signal
A = Mux(D(A,0), Ax, C3)

